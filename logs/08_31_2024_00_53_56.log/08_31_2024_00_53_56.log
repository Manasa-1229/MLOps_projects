[ 2024-08-31 00:54:00,391 ] 11 root - INFO - Training has started
[ 2024-08-31 00:54:00,391 ] 42 root - INFO - Starting data ingestion
[ 2024-08-31 00:54:02,936 ] 65 root - INFO - Performed train test split on the dataframe
[ 2024-08-31 00:54:02,936 ] 66 root - INFO - Exited split_data_as_train_test method of Data_Ingestion class
[ 2024-08-31 00:54:02,936 ] 71 root - INFO - Exporting train and test file path.
[ 2024-08-31 00:54:03,067 ] 79 root - INFO - Exported train and test file path.
[ 2024-08-31 00:54:03,068 ] 45 root - INFO - Data ingestion completed and artifact: DataIngestionArtifact(trained_file_path='Artifacts\\08_31_2024_00_53_58\\data_ingestion\\ingested\\train.csv', test_file_path='Artifacts\\08_31_2024_00_53_58\\data_ingestion\\ingested\\test.csv')
[ 2024-08-31 00:54:03,161 ] 27 root - INFO - Required number of columns: 31
[ 2024-08-31 00:54:03,161 ] 28 root - INFO - Data frame has columns: 31
[ 2024-08-31 00:54:03,162 ] 27 root - INFO - Required number of columns: 31
[ 2024-08-31 00:54:03,162 ] 28 root - INFO - Data frame has columns: 31
[ 2024-08-31 00:54:03,404 ] 138 root - INFO - Data validation artifact: DataValidationArtifact(validation_status=True, valid_train_file_path='Artifacts\\08_31_2024_00_53_58\\data_ingestion\\ingested\\train.csv', valid_test_file_path='Artifacts\\08_31_2024_00_53_58\\data_ingestion\\ingested\\test.csv', invalid_train_file_path=None, invalid_test_file_path=None, drift_report_file_path='Artifacts\\08_31_2024_00_53_58\\data_validation\\drift_report\\report.yaml')
[ 2024-08-31 00:54:03,405 ] 86 root - INFO - Entered initiate_data_transformation method of DataTransformation class
[ 2024-08-31 00:54:03,405 ] 89 root - INFO - Starting data transformation
[ 2024-08-31 00:54:03,452 ] 59 root - INFO - Entered get_data_transformer_object method of DataTransformation class
[ 2024-08-31 00:54:03,452 ] 68 root - INFO - Initialise KNNImputer with {'missing_values': nan, 'n_neighbors': 3, 'weights': 'uniform'}
[ 2024-08-31 00:54:03,453 ] 74 root - INFO - Exited get_data_transformer_object method of DataTransformation class
[ 2024-08-31 00:54:03,453 ] 97 root - INFO - Got the preprocessor object
[ 2024-08-31 00:54:03,473 ] 57 root - INFO - Entered the save_object method of MainUtils class
[ 2024-08-31 00:54:03,477 ] 61 root - INFO - Exited the save_object method of MainUtils class
[ 2024-08-31 00:54:03,477 ] 129 root - INFO - Data transformation artifact: DataTransformationArtifact(transformed_object_file_path='Artifacts\\08_31_2024_00_53_58\\data_transformation\\transformed_object\\preprocessing.pkl', transformed_train_file_path='Artifacts\\08_31_2024_00_53_58\\data_transformation\\transformed\\train.npy', transformed_test_file_path='Artifacts\\08_31_2024_00_53_58\\data_transformation\\transformed\\test.npy')
[ 2024-08-31 00:54:03,680 ] 57 root - INFO - Entered the save_object method of MainUtils class
[ 2024-08-31 00:54:03,687 ] 61 root - INFO - Exited the save_object method of MainUtils class
[ 2024-08-31 00:54:03,687 ] 86 root - INFO - Model trainer artifact: ModelTrainerArtifact(trained_model_file_path='Artifacts\\08_31_2024_00_53_58\\model_trainer\\trained_model\\model.pkl', train_metric_artifact=ClassificationMetricArtifact(f1_score=np.float64(0.9882842217375869), precision_score=np.float64(0.9860338022467362), recall_score=np.float64(0.9905449369662465)), test_metric_artifact=ClassificationMetricArtifact(f1_score=np.float64(0.9825476429287864), precision_score=np.float64(0.9768647786198644), recall_score=np.float64(0.9882970137207425)))
[ 2024-08-31 00:54:03,905 ] 101 root - INFO - Model evaluation artifact: ModelEvaluationArtifact(is_model_accepted=False, improved_accuracy=np.float64(0.00039086421303369256), best_model_path='saved_models\\1725083461\\model.pkl', trained_model_path='Artifacts\\08_31_2024_00_53_58\\model_trainer\\trained_model\\model.pkl', train_model_metric_artifact=ClassificationMetricArtifact(f1_score=np.float64(0.9871265484576147), precision_score=np.float64(0.9841782370035518), recall_score=np.float64(0.9900925775540036)), best_model_metric_artifact=ClassificationMetricArtifact(f1_score=np.float64(0.986735684244581), precision_score=np.float64(0.9827613984211374), recall_score=np.float64(0.9907422445996427)))
